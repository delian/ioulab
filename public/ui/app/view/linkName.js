/*
 * File: app/view/linkName.js
 *
 * This file was generated by Sencha Architect version 3.0.1.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('iouLab.view.linkName', {
    extend: 'Ext.window.Window',
    alias: 'widget.linkName',

    requires: [
        'Ext.form.FieldSet',
        'Ext.form.field.Display',
        'Ext.form.field.ComboBox',
        'Ext.form.field.Hidden',
        'Ext.toolbar.Toolbar',
        'Ext.toolbar.Fill',
        'Ext.button.Button'
    ],

    width: 780,
    title: 'Edit Link',
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'container',
                    layout: {
                        type: 'hbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'fieldset',
                            flex: 1,
                            itemId: 'source',
                            title: 'Source Device',
                            items: [
                                {
                                    xtype: 'displayfield',
                                    anchor: '100%',
                                    itemId: 'name',
                                    fieldLabel: 'Device',
                                    labelAlign: 'right',
                                    labelWidth: 70
                                },
                                {
                                    xtype: 'combobox',
                                    anchor: '100%',
                                    itemId: 'interface',
                                    fieldLabel: 'Interface',
                                    labelAlign: 'right',
                                    labelWidth: 70,
                                    editable: false,
                                    displayField: 'name',
                                    store: 'leftDevIntf',
                                    valueField: 'name'
                                },
                                {
                                    xtype: 'hiddenfield',
                                    anchor: '100%',
                                    itemId: 'deviceId',
                                    fieldLabel: 'Label'
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            flex: 1.2,
                            itemId: 'link',
                            title: 'Link Name',
                            layout: {
                                type: 'vbox',
                                align: 'stretch'
                            },
                            items: [
                                {
                                    xtype: 'displayfield',
                                    flex: 1,
                                    itemId: 'empty',
                                    fieldLabel: 'Label',
                                    hideLabel: true
                                },
                                {
                                    xtype: 'textfield',
                                    itemId: 'name',
                                    fieldLabel: 'Name',
                                    hideLabel: true,
                                    labelAlign: 'right',
                                    labelWidth: 70
                                }
                            ]
                        },
                        {
                            xtype: 'fieldset',
                            flex: 1,
                            itemId: 'target',
                            title: 'Target Device',
                            items: [
                                {
                                    xtype: 'displayfield',
                                    anchor: '100%',
                                    itemId: 'name',
                                    fieldLabel: 'Device',
                                    labelAlign: 'right',
                                    labelWidth: 70
                                },
                                {
                                    xtype: 'combobox',
                                    anchor: '100%',
                                    itemId: 'interface',
                                    fieldLabel: 'Interface',
                                    labelAlign: 'right',
                                    labelWidth: 70,
                                    editable: false,
                                    displayField: 'name',
                                    store: 'rightDevIntf',
                                    valueField: 'name'
                                },
                                {
                                    xtype: 'hiddenfield',
                                    anchor: '100%',
                                    itemId: 'deviceId',
                                    fieldLabel: 'Label'
                                }
                            ]
                        }
                    ]
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'bottom',
                    items: [
                        {
                            xtype: 'tbfill'
                        },
                        {
                            xtype: 'button',
                            text: 'Save',
                            listeners: {
                                click: {
                                    fn: me.onButtonClick,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ],
            listeners: {
                show: {
                    fn: me.onWindowShow,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onButtonClick: function(button, e, eOpts) {
        var comp = button.up('window');
        console.log('save',comp,arguments);

        Ext.Ajax.request({
            method: 'PUT',
            url: '/rest/link/'+comp.linkId,
            jsonData: Ext.JSON.encode({
                name: comp.down('#link').down('#name').value,
                source: {
                    id: comp.down('#source').down('#deviceId').value,
                    name: comp.down('#source').down('#interface').value
                },
                target: {
                    id: comp.down('#target').down('#deviceId').value,
                    name: comp.down('#target').down('#interface').value
                }
            }),
            success: function(res) {
                comp.close();
            }
        });

    },

    onWindowShow: function(component, eOpts) {
        console.log('Link show',arguments,component);

        component.down('#link').down('#empty').setValue("");

        Ext.Ajax.request({
            url: '/rest/link/'+component.linkId,
            success: function(res) {
                var obj = Ext.JSON.decode(res.responseText);
                var c;
                component.down('#source').down('#deviceId').setValue(obj.source.id);
                component.down('#target').down('#deviceId').setValue(obj.target.id);
                c=component.down('#source').down('#interface');
                c.getStore().getProxy().url='/rest/device/'+obj.source.id+'/interfaces/free/'+obj.type;
                c.setValue(obj.target.name);
                c=component.down('#target').down('#interface');
                c.getStore().getProxy().url='/rest/device/'+obj.target.id+'/interfaces/free/'+obj.type;
                c.setValue(obj.target.name);
                component.down('#link').down('#name').setValue(obj.name);
                Ext.Ajax.request({
                    url: '/rest/device/'+obj.source.id,
                    success: function(res) {
                        var obj = Ext.JSON.decode(res.responseText);
                        component.down('#source').down('#name').setValue(obj.name);
                    }
                });
                Ext.Ajax.request({
                    url: '/rest/device/'+obj.target.id,
                    success: function(res) {
                        var obj = Ext.JSON.decode(res.responseText);
                        component.down('#target').down('#name').setValue(obj.name);
                    }
                });
            }
        });


    }

});